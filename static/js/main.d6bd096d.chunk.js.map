{"version":3,"sources":["component/Navbar/Navbar.js","component/Slideshow/SliderContent.js","component/VideoThumbs/ThumbsSlider.js","App.js","index.js"],"names":["Navbar","useState","menuClick","setMenuClick","closeMenu","setButton","showButton","window","innerWidth","useEffect","addEventListener","className","to","onClick","AutoplaySlider","withAutoplay","AwesomeSlider","SliderContent","console","log","play","cancelOnInteraction","interval","data-src","SwiperCore","use","Navigation","ThumbsSlider","slides","i","push","tag","style","listStyle","width","src","alt","Fragment","id","breakpoints","360","slidesPerView","640","768","navigation","spaceBetween","App","path","ReactDOM","render","document","getElementById"],"mappings":"gRA6DeA,MAzDf,WAAmB,IAAD,EACkBC,oBAAS,GAD3B,mBACTC,EADS,KACEC,EADF,KAGVC,EAAY,kBAAMD,GAAa,IAHrB,EAIYF,oBAAS,GAJrB,mBAIDI,GAJC,WAKVC,EAAa,WACbC,OAAOC,YAAc,IACvBH,GAAU,GAEVA,GAAU,IAOd,OAJAI,qBAAU,WACRH,MACC,IACHC,OAAOG,iBAAiB,SAAUJ,GAEhC,mCACE,qBAAKK,UAAU,SAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAcE,QAAST,EAA9C,uBAGA,qBAAKO,UAAU,YAAf,SACE,mBACEA,UAAWT,EAAY,eAAiB,cACxCW,QAxBO,kBAAMV,GAAcD,QA2B/B,qBAAIS,UAAWT,EAAY,kBAAoB,WAA/C,UACE,oBAAIS,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,QAAQC,QAAST,EAAhD,oBAIF,oBAAIO,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,YAAYC,QAAST,EAApD,wBAIF,oBAAIO,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,YAAYC,QAAST,EAApD,wBAIF,oBAAIO,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,YAAYC,QAAST,EAApD,qC,yCC9CRU,G,MAAiBC,IAAaC,MAuBrBC,MArBf,WAQE,OADAC,QAAQC,IANO,CACb,qBACA,qBACA,uBAKA,eAACL,EAAD,CACEM,MAAM,EACNC,qBAAqB,EACrBC,SAAU,IAHZ,UAKE,qBAAKC,WAAS,uBACd,qBAAKA,WAAS,uBACd,qBAAKA,WAAS,2B,4CChBpBC,IAAWC,IAAI,CAACC,MAsDDC,MApDf,WAEE,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BD,EAAOE,KACL,cAAC,IAAD,CAAgCC,IAAI,KAAKC,MAAO,CAAEC,UAAW,QAA7D,SACE,qBACED,MAAO,CAAEE,MAAO,QAChBC,IAAG,mCAA8BN,EAAI,EAAlC,YACHO,IAAG,gBAAWP,MAJlB,gBAA2BA,KAU/B,OACE,eAAC,IAAMQ,SAAP,WACE,qBAAKC,GAAG,QAAR,iDACA,cAAC,IAAD,CACEC,YAAa,CAEXC,IAAK,CACHN,MAAO,IACPO,cAAe,GAGjBC,IAAK,CACHR,MAAO,IACPO,cAAe,GAGjBE,IAAK,CACHT,MAAO,IACPO,cAAe,IAGnBH,GAAG,OACHJ,MAAM,MACNU,YAAU,EACVC,aAAc,EArBhB,SAwBGjB,IAEH,sBAAKU,GAAG,aAAR,UACE,sBAAMA,GAAG,SAAT,6BACA,sBAAMA,GAAG,SAAT,6BACA,sBAAMA,GAAG,SAAT,oCCjCOQ,MAdf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,YCTpBC,IAASC,OAAQ,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.d6bd096d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const [menuClick, setMenuClick] = useState(false);\r\n  const menuToggle = () => setMenuClick(!menuClick);\r\n  const closeMenu = () => setMenuClick(false);\r\n  const [button, setButton] = useState(true);\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n  window.addEventListener(\"resize\", showButton);\r\n  return (\r\n    <>\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-container\">\r\n          <Link to=\"/\" className=\"navbar-logo\" onClick={closeMenu}>\r\n            FILM BUNK\r\n          </Link>\r\n          <div className=\"menu-icon\">\r\n            <i\r\n              className={menuClick ? \"fas fa-times\" : \"fas fa-bars\"}\r\n              onClick={menuToggle}\r\n            />\r\n          </div>\r\n          <ul className={menuClick ? \"nav-menu active\" : \"nav-menu\"}>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-links\" to=\"/Home\" onClick={closeMenu}>\r\n                HOME\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-links\" to=\"/services\" onClick={closeMenu}>\r\n                PROJECTS\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-links\" to=\"/services\" onClick={closeMenu}>\r\n                ABOUT US\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-links\" to=\"/services\" onClick={closeMenu}>\r\n                CONTACT US\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import AwesomeSlider from \"react-awesome-slider\";\r\nimport withAutoplay from \"react-awesome-slider/dist/autoplay\";\r\nimport \"react-awesome-slider/dist/styles.css\";\r\n\r\nconst AutoplaySlider = withAutoplay(AwesomeSlider);\r\n\r\nfunction SliderContent() {\r\n  const slides = [\r\n    \"images/slide_1.jpg\",\r\n    \"images/slide_2.jpg\",\r\n    \"images/slide_3.jpg\",\r\n  ];\r\n\r\n  console.log(slides);\r\n  return (\r\n    <AutoplaySlider\r\n      play={true}\r\n      cancelOnInteraction={false} // should stop playing on user interaction\r\n      interval={3000}\r\n    >\r\n      <div data-src=\"images/slide_1.jpg\" />\r\n      <div data-src=\"images/slide_2.jpg\" />\r\n      <div data-src=\"images/slide_3.jpg\" />\r\n    </AutoplaySlider>\r\n  );\r\n}\r\n\r\nexport default SliderContent;\r\n","import React, { useState } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation } from \"swiper\";\r\nimport \"./ThumbsSlider.css\";\r\nimport \"swiper/swiper-bundle.css\";\r\n\r\nSwiperCore.use([Navigation]);\r\n\r\nfunction ThumbsSlider() {\r\n  const slides = [];\r\n  for (let i = 0; i < 5; i += 1) {\r\n    slides.push(\r\n      <SwiperSlide key={`slide-${i}`} tag=\"li\" style={{ listStyle: \"none\" }}>\r\n        <img\r\n          style={{ width: \"100%\" }}\r\n          src={`https://picsum.photos/id/${i + 1}/500/300`}\r\n          alt={`Slide ${i}`}\r\n        />\r\n      </SwiperSlide>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"title\">Resize window to see responsiveness</div>\r\n      <Swiper\r\n        breakpoints={{\r\n          // when window width is >= 640px\r\n          360: {\r\n            width: 360,\r\n            slidesPerView: 2,\r\n          },\r\n          // when window width is >= 640px\r\n          640: {\r\n            width: 640,\r\n            slidesPerView: 2,\r\n          },\r\n          // when window width is >= 768px\r\n          768: {\r\n            width: 768,\r\n            slidesPerView: 2,\r\n          },\r\n        }}\r\n        id=\"main\"\r\n        width=\"480\"\r\n        navigation\r\n        spaceBetween={5}\r\n        // slidesPerView={1}\r\n      >\r\n        {slides}\r\n      </Swiper>\r\n      <div id=\"bp-wrapper\">\r\n        <span id=\"bp-480\">480p breakpoint</span>\r\n        <span id=\"bp-640\">640p breakpoint</span>\r\n        <span id=\"bp-768\">768p breakpoint</span>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ThumbsSlider;\r\n","import \"./App.css\";\nimport Navbar from \"./component/Navbar/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SliderContent from \"./component/Slideshow/SliderContent\";\n\nimport ThumbsSlider from \"./component/VideoThumbs/ThumbsSlider\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <SliderContent />\n      <ThumbsSlider />\n      <ThumbsSlider />\n      <Switch>\n        <Route path=\"/\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render( <App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}